// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: FC_Control.proto
// Protobuf C++ Version: 5.29.3

#ifndef FC_5fControl_2eproto_2epb_2eh
#define FC_5fControl_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "FC_Service_Message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_FC_5fControl_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_FC_5fControl_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_FC_5fControl_2eproto;
namespace fc {
class FCAny;
struct FCAnyDefaultTypeInternal;
extern FCAnyDefaultTypeInternal _FCAny_default_instance_;
class FCMessage;
struct FCMessageDefaultTypeInternal;
extern FCMessageDefaultTypeInternal _FCMessage_default_instance_;
}  // namespace fc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace fc {

// ===================================================================


// -------------------------------------------------------------------

class FCAny final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fc.FCAny) */ {
 public:
  inline FCAny() : FCAny(nullptr) {}
  ~FCAny() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FCAny* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FCAny));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FCAny(
      ::google::protobuf::internal::ConstantInitialized);

  inline FCAny(const FCAny& from) : FCAny(nullptr, from) {}
  inline FCAny(FCAny&& from) noexcept
      : FCAny(nullptr, std::move(from)) {}
  inline FCAny& operator=(const FCAny& from) {
    CopyFrom(from);
    return *this;
  }
  inline FCAny& operator=(FCAny&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FCAny& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kServiceAnnounce = 1,
    MSG_NOT_SET = 0,
  };
  static inline const FCAny* internal_default_instance() {
    return reinterpret_cast<const FCAny*>(
        &_FCAny_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FCAny& a, FCAny& b) { a.Swap(&b); }
  inline void Swap(FCAny* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FCAny* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FCAny* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FCAny>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FCAny& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FCAny& from) { FCAny::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FCAny* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "fc.FCAny"; }

 protected:
  explicit FCAny(::google::protobuf::Arena* arena);
  FCAny(::google::protobuf::Arena* arena, const FCAny& from);
  FCAny(::google::protobuf::Arena* arena, FCAny&& from) noexcept
      : FCAny(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceAnnounceFieldNumber = 1,
  };
  // .fc.ServiceAnnounce serviceAnnounce = 1;
  bool has_serviceannounce() const;
  private:
  bool _internal_has_serviceannounce() const;

  public:
  void clear_serviceannounce() ;
  const ::fc::ServiceAnnounce& serviceannounce() const;
  PROTOBUF_NODISCARD ::fc::ServiceAnnounce* release_serviceannounce();
  ::fc::ServiceAnnounce* mutable_serviceannounce();
  void set_allocated_serviceannounce(::fc::ServiceAnnounce* value);
  void unsafe_arena_set_allocated_serviceannounce(::fc::ServiceAnnounce* value);
  ::fc::ServiceAnnounce* unsafe_arena_release_serviceannounce();

  private:
  const ::fc::ServiceAnnounce& _internal_serviceannounce() const;
  ::fc::ServiceAnnounce* _internal_mutable_serviceannounce();

  public:
  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:fc.FCAny)
 private:
  class _Internal;
  void set_has_serviceannounce();
  inline bool has_msg() const;
  inline void clear_has_msg();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FCAny& from_msg);
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::fc::ServiceAnnounce* serviceannounce_;
    } msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FC_5fControl_2eproto;
};
// -------------------------------------------------------------------

class FCMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fc.FCMessage) */ {
 public:
  inline FCMessage() : FCMessage(nullptr) {}
  ~FCMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FCMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FCMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FCMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline FCMessage(const FCMessage& from) : FCMessage(nullptr, from) {}
  inline FCMessage(FCMessage&& from) noexcept
      : FCMessage(nullptr, std::move(from)) {}
  inline FCMessage& operator=(const FCMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline FCMessage& operator=(FCMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FCMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const FCMessage* internal_default_instance() {
    return reinterpret_cast<const FCMessage*>(
        &_FCMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FCMessage& a, FCMessage& b) { a.Swap(&b); }
  inline void Swap(FCMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FCMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FCMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FCMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FCMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FCMessage& from) { FCMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FCMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "fc.FCMessage"; }

 protected:
  explicit FCMessage(::google::protobuf::Arena* arena);
  FCMessage(::google::protobuf::Arena* arena, const FCMessage& from);
  FCMessage(::google::protobuf::Arena* arena, FCMessage&& from) noexcept
      : FCMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 4,
    kApiVersionIdFieldNumber = 5,
    kTimestampFieldNumber = 1,
    kMessageIdFieldNumber = 2,
    kCorrelationIdFieldNumber = 3,
  };
  // repeated .fc.FCAny messages = 4;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::fc::FCAny* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::fc::FCAny>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::fc::FCAny>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::fc::FCAny>* _internal_mutable_messages();
  public:
  const ::fc::FCAny& messages(int index) const;
  ::fc::FCAny* add_messages();
  const ::google::protobuf::RepeatedPtrField<::fc::FCAny>& messages() const;
  // bytes apiVersionId = 5;
  void clear_apiversionid() ;
  const std::string& apiversionid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_apiversionid(Arg_&& arg, Args_... args);
  std::string* mutable_apiversionid();
  PROTOBUF_NODISCARD std::string* release_apiversionid();
  void set_allocated_apiversionid(std::string* value);

  private:
  const std::string& _internal_apiversionid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_apiversionid(
      const std::string& value);
  std::string* _internal_mutable_apiversionid();

  public:
  // int64 timestamp = 1;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 messageId = 2;
  void clear_messageid() ;
  ::int32_t messageid() const;
  void set_messageid(::int32_t value);

  private:
  ::int32_t _internal_messageid() const;
  void _internal_set_messageid(::int32_t value);

  public:
  // int32 correlationId = 3;
  void clear_correlationid() ;
  ::int32_t correlationid() const;
  void set_correlationid(::int32_t value);

  private:
  ::int32_t _internal_correlationid() const;
  void _internal_set_correlationid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fc.FCMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FCMessage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::fc::FCAny > messages_;
    ::google::protobuf::internal::ArenaStringPtr apiversionid_;
    ::int64_t timestamp_;
    ::int32_t messageid_;
    ::int32_t correlationid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FC_5fControl_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FCMessage

// int64 timestamp = 1;
inline void FCMessage::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t FCMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:fc.FCMessage.timestamp)
  return _internal_timestamp();
}
inline void FCMessage::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:fc.FCMessage.timestamp)
}
inline ::int64_t FCMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void FCMessage::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// int32 messageId = 2;
inline void FCMessage::clear_messageid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messageid_ = 0;
}
inline ::int32_t FCMessage::messageid() const {
  // @@protoc_insertion_point(field_get:fc.FCMessage.messageId)
  return _internal_messageid();
}
inline void FCMessage::set_messageid(::int32_t value) {
  _internal_set_messageid(value);
  // @@protoc_insertion_point(field_set:fc.FCMessage.messageId)
}
inline ::int32_t FCMessage::_internal_messageid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messageid_;
}
inline void FCMessage::_internal_set_messageid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messageid_ = value;
}

// int32 correlationId = 3;
inline void FCMessage::clear_correlationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.correlationid_ = 0;
}
inline ::int32_t FCMessage::correlationid() const {
  // @@protoc_insertion_point(field_get:fc.FCMessage.correlationId)
  return _internal_correlationid();
}
inline void FCMessage::set_correlationid(::int32_t value) {
  _internal_set_correlationid(value);
  // @@protoc_insertion_point(field_set:fc.FCMessage.correlationId)
}
inline ::int32_t FCMessage::_internal_correlationid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.correlationid_;
}
inline void FCMessage::_internal_set_correlationid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.correlationid_ = value;
}

// repeated .fc.FCAny messages = 4;
inline int FCMessage::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int FCMessage::messages_size() const {
  return _internal_messages_size();
}
inline void FCMessage::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::fc::FCAny* FCMessage::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fc.FCMessage.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fc::FCAny>* FCMessage::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fc.FCMessage.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::fc::FCAny& FCMessage::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fc.FCMessage.messages)
  return _internal_messages().Get(index);
}
inline ::fc::FCAny* FCMessage::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fc::FCAny* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:fc.FCMessage.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fc::FCAny>& FCMessage::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fc.FCMessage.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::fc::FCAny>&
FCMessage::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::fc::FCAny>*
FCMessage::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// bytes apiVersionId = 5;
inline void FCMessage::clear_apiversionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apiversionid_.ClearToEmpty();
}
inline const std::string& FCMessage::apiversionid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fc.FCMessage.apiVersionId)
  return _internal_apiversionid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FCMessage::set_apiversionid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apiversionid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fc.FCMessage.apiVersionId)
}
inline std::string* FCMessage::mutable_apiversionid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_apiversionid();
  // @@protoc_insertion_point(field_mutable:fc.FCMessage.apiVersionId)
  return _s;
}
inline const std::string& FCMessage::_internal_apiversionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apiversionid_.Get();
}
inline void FCMessage::_internal_set_apiversionid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apiversionid_.Set(value, GetArena());
}
inline std::string* FCMessage::_internal_mutable_apiversionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.apiversionid_.Mutable( GetArena());
}
inline std::string* FCMessage::release_apiversionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fc.FCMessage.apiVersionId)
  return _impl_.apiversionid_.Release();
}
inline void FCMessage::set_allocated_apiversionid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apiversionid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.apiversionid_.IsDefault()) {
    _impl_.apiversionid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:fc.FCMessage.apiVersionId)
}

// -------------------------------------------------------------------

// FCAny

// .fc.ServiceAnnounce serviceAnnounce = 1;
inline bool FCAny::has_serviceannounce() const {
  return msg_case() == kServiceAnnounce;
}
inline bool FCAny::_internal_has_serviceannounce() const {
  return msg_case() == kServiceAnnounce;
}
inline void FCAny::set_has_serviceannounce() {
  _impl_._oneof_case_[0] = kServiceAnnounce;
}
inline ::fc::ServiceAnnounce* FCAny::release_serviceannounce() {
  // @@protoc_insertion_point(field_release:fc.FCAny.serviceAnnounce)
  if (msg_case() == kServiceAnnounce) {
    clear_has_msg();
    auto* temp = _impl_.msg_.serviceannounce_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.serviceannounce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::fc::ServiceAnnounce& FCAny::_internal_serviceannounce() const {
  return msg_case() == kServiceAnnounce ? *_impl_.msg_.serviceannounce_ : reinterpret_cast<::fc::ServiceAnnounce&>(::fc::_ServiceAnnounce_default_instance_);
}
inline const ::fc::ServiceAnnounce& FCAny::serviceannounce() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fc.FCAny.serviceAnnounce)
  return _internal_serviceannounce();
}
inline ::fc::ServiceAnnounce* FCAny::unsafe_arena_release_serviceannounce() {
  // @@protoc_insertion_point(field_unsafe_arena_release:fc.FCAny.serviceAnnounce)
  if (msg_case() == kServiceAnnounce) {
    clear_has_msg();
    auto* temp = _impl_.msg_.serviceannounce_;
    _impl_.msg_.serviceannounce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FCAny::unsafe_arena_set_allocated_serviceannounce(::fc::ServiceAnnounce* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_serviceannounce();
    _impl_.msg_.serviceannounce_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fc.FCAny.serviceAnnounce)
}
inline ::fc::ServiceAnnounce* FCAny::_internal_mutable_serviceannounce() {
  if (msg_case() != kServiceAnnounce) {
    clear_msg();
    set_has_serviceannounce();
    _impl_.msg_.serviceannounce_ =
        ::google::protobuf::Message::DefaultConstruct<::fc::ServiceAnnounce>(GetArena());
  }
  return _impl_.msg_.serviceannounce_;
}
inline ::fc::ServiceAnnounce* FCAny::mutable_serviceannounce() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::fc::ServiceAnnounce* _msg = _internal_mutable_serviceannounce();
  // @@protoc_insertion_point(field_mutable:fc.FCAny.serviceAnnounce)
  return _msg;
}

inline bool FCAny::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void FCAny::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline FCAny::MsgCase FCAny::msg_case() const {
  return FCAny::MsgCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace fc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // FC_5fControl_2eproto_2epb_2eh
